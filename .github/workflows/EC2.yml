name: Entrega Continua

on:
  workflow_call:

jobs:

  EC2:
    runs-on: ubuntu-latest
    steps:
      # Primeiro, faz o checkout do código para criar a estrutura de pastas do projeto
    - uses: actions/checkout@v3

    - name: Download a Build Artifact
      uses: actions/download-artifact@v4
      with:
      #Arifact name
        name: programa
        path: ./dist
    

    - name: Deploy to Staging server
      uses: easingthemes/ssh-deploy@main
      with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}         
          SOURCE: "dist/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: /home/${{ secrets.REMOTE_USER }}
          EXCLUDE: "postgres-data"


    - name: Execute remote SSH commands using password
      uses: appleboy/ssh-action@v1
      with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }} 
          port: 22
          script: |
             # Tenta matar o processo anterior, se ele existir
              # A flag '-f' força o encerramento do processo 'main'
              # 'pkill' pode falhar se o processo não existir, então usamos '|| true' para ignorar o erro
              sudo pkill -f main || true

              # Exporta as variáveis de ambiente.
              export HOST=${{ secrets.DBHOST }}
              export USER=${{ secrets.DBUSER }}
              export PASSWORD=${{ secrets.DBPASSWORD }}
              export DBNAME=${{ secrets.DBNAME }}
              export DBPORT=${{ secrets.DBPORT }}
              export PORT=8000
              
              # Navega até o diretório onde o arquivo foi enviado
              # O rsync envia o arquivo 'main' para o diretório de usuário
              cd /home/${{ secrets.REMOTE_USER }}

              # Concede permissão de execução ao binário
              # Sem essa permissão, o comando 'nohup' vai falhar
              chmod +x main
              
              # Executa o programa em segundo plano, redireciona a saída para um arquivo de log
              # e encerra o processo do shell.
              # O 'disown' garante que o processo continuará rodando mesmo após o encerramento da sessão SSH.
              nohup ./main > app.log 2>&1 & disown

